-- 1) 전 직원의 평균 급여보다 급여를 적게 받는 직원들의 이름, 직급 코드, 급여 조회
SELECT EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE SALARY < (
    SELECT AVG(SALARY)
    FROM EMPLOYEE
);

-- 그룹함수는 WHERE절에 사용 불가
SELECT EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE SALARY < AVG(SALARY);

-- 2) 최저 급여를 받는 직원의 사번, 이름, 직급 코드, 급여, 입사일 조회
SELECT EMP_ID, EMP_NAME, DEPT_CODE, SALARY, HIRE_DATE
FROM EMPLOYEE
WHERE SALARY = (SELECT MIN(SALARY) FROM EMPLOYEE);

-- 3) 노옹철 사원의 급여보다 더 많이 받는 사원의 사번, 사원명, 부서명, 직급 코드, 급여 조회
SELECT E.EMP_ID, E.EMP_NAME, D.DEPT_TITLE, E.DEPT_CODE, E.SALARY
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DEPT_CODE = D.DEPT_ID 
  AND SALARY > (SELECT SALARY FROM EMPLOYEE WHERE  EMP_NAME = '노옹철');

-- 4) 부서별 급여의 합이 가장 큰 부서의 부서 코드, 급여의 합 조회(보류, 힌트 : where절에 쓰지 말것, groupin  )
SELECT DEPT_CODE, SUM(SALARY)
FROM EMPLOYEE
GROUP BY DEPT_CODE
HAVING SUM(SALARY) = MAX(SUM(SALARY));

-- 5) 전지연 사원이 속해있는 부서원들 조회 (단, 전지연 사원은 제외)
--    사번, 사원명, 전화번호, 직급명, 부서명, 입사일
SELECT E.EMP_ID, E.EMP_NAME, E.PHONE, J.JOB_NAME, D.DEPT_TITLE, E.HIRE_DATE
FROM EMPLOYEE E
JOIN JOB J ON(E.JOB_CODE = J.JOB_CODE)
JOIN DEPARTMENT D ON(E.DEPT_CODE = D.DEPT_ID)
WHERE DEPT_CODE = (SELECT DEPT_CODE FROM EMPLOYEE WHERE EMP_NAME = '전지연') AND EMP_NAME != '전지연';