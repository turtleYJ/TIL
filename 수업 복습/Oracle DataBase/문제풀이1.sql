-- SELF STUDY WORKBOOK
CREATE TABLE TB_DEPARTMENT(
    DEPARTMENT_NO   VARCHAR2(10) PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(20) NOT NULL,
    CATEGORY        VARCHAR2(20),
    OPEN_YN         CHAR(1) DEFAULT 'Y',
    CAPACITY        NUMBER
);

COMMENT ON COLUMN TB_DEPARTMENT.DEPARTMENT_NO IS '학과 번호';
COMMENT ON COLUMN TB_DEPARTMENT.DEPARTMENT_NAME IS '학과 이름';
COMMENT ON COLUMN TB_DEPARTMENT.CATEGORY IS '계열';
COMMENT ON COLUMN TB_DEPARTMENT.OPEN_YN IS '개설 여부';
COMMENT ON COLUMN TB_DEPARTMENT.CAPACITY IS '정원';

-- 아직
CREATE TABLE TB_STUDENT(
    STUDENT_NO VARCHAR2(10) PRIMARY KEY,
    DEPARTMENT_NO VARCHAR2(10) REFERENCES TB_DEPARTMENT,
    STUDENT_NAME VARCHAR2(30) NOT NULL,
    STUDENT_SSN VARCHAR2(14),
    STUDENT_ADDRESS VARCHAR2(100),
    ENTRANCE_DATE DATE DEFAULT SYSDATE,
    ABSENCE_YN CHAR(1) DEFAULT 'N',
    COACH_PROFESSOR_NO VARCHAR2(10) REFERENCES TB_PROFESSOR
);

COMMENT ON COLUMN TB_STUDENT.STUDENT_NO IS '학생 번호'; 
COMMENT ON COLUMN TB_STUDENT.DEPARTMENT_NO IS '학과 번호'; 
COMMENT ON COLUMN TB_STUDENT.STUDENT_NAME IS '학생 이름'; 
COMMENT ON COLUMN TB_STUDENT.STUDENT_SSN IS '학생 주민번호'; 
COMMENT ON COLUMN TB_STUDENT.STUDENT_ADDRESS IS '학생 주소'; 
COMMENT ON COLUMN TB_STUDENT.ENTRANCE_DATE IS '입학 일자'; 
COMMENT ON COLUMN TB_STUDENT.ABSENCE_YN IS '휴학 여부'; 
COMMENT ON COLUMN TB_STUDENT.COACH_PROFESSOR_NO IS '지도 교수 번호'; 




DROP TABLE TB_BOOK;
DROP TABLE TB_MEMBER;
DROP TABLE TB_RENT;
DROP TABLE TB_PUBLISHER;


--
CREATE TABLE TB_CLASS(
    CLASS_NO                VARCHAR2(10) PRIMARY KEY,
    DEPARTMENT_NO           VARCHAR2(10) REFERENCES TB_DEPARTMENT,
    PREATTENDING_CLASS_NO   VARCHAR2(10) REFERENCES TB_CLASS,
    CLASS_NAME              VARCHAR2(30) NOT NULL,
    CLASS_TYPE              VARCHAR2(10)
);

COMMENT ON COLUMN TB_CLASS.CLASS_NO IS '과목 번호'; 
COMMENT ON COLUMN TB_CLASS.DEPARTMENT_NO IS '학과 번호'; 
COMMENT ON COLUMN TB_CLASS.PREATTENDING_CLASS_NO IS '선수 과목 번호'; 
COMMENT ON COLUMN TB_CLASS.CLASS_NAME IS '과목 이름'; 
COMMENT ON COLUMN TB_CLASS.CLASS_TYPE IS '과목 구분'; 



CREATE TABLE TB_CLASS_PROFESSOR(
    CLASS_NO        VARCHAR2(10) REFERENCES TB_CLASS PRIMARY KEY,
    PROFESSOR_NO    VARCHAR2(10) REFERENCES TB_PROFESSOR
);

COMMENT ON COLUMN TB_CLASS_PROFESSOR.CLASS_NO IS '과목 번호'; 
COMMENT ON COLUMN TB_CLASS_PROFESSOR.PROFESSOR_NO IS '교수 번호'; 


CREATE TABLE TB_PROFESSOR(
    PROFESSOR_NO        VARCHAR2(10) PRIMARY KEY,
    PROFESSOR_NAME      VARCHAR2(30) NOT NULL,
    PROFESSOR_SSN       VARCHAR2(14),
    PROFESSOR_ADDRESS   VARCHAR2(100),
    DEPARTMENT_NO       VARCHAR2(10) REFERENCES TB_DEPARTMENT
);

COMMENT ON COLUMN TB_PROFESSOR.PROFESSOR_NO IS '교수 번호'; 
COMMENT ON COLUMN TB_PROFESSOR.PROFESSOR_NAME IS '교수 이름'; 
COMMENT ON COLUMN TB_PROFESSOR.PROFESSOR_SSN IS '교수 주민번호'; 
COMMENT ON COLUMN TB_PROFESSOR.PROFESSOR_ADDRESS IS '교수 주소'; 
COMMENT ON COLUMN TB_PROFESSOR.DEPARTMENT_NO IS '학과 번호'; 



CREATE TABLE TB_GRADE(
    TERM_NO     VARCHAR2(10) PRIMARY KEY,
    CLASS_NO    VARCHAR2(10) REFERENCES TB_CLASS,
    STUDENT_NO  VARCHAR2(10) REFERENCES TB_STUDENT,
    POINT       NUMBER(3,2)
);

COMMENT ON COLUMN TB_GRADE.TERM_NO IS '학기 번호'; 
COMMENT ON COLUMN TB_GRADE.CLASS_NO IS '과목 번호'; 
COMMENT ON COLUMN TB_GRADE.STUDENT_NO IS '학생 번호'; 
COMMENT ON COLUMN TB_GRADE.POINT IS '학점'; 

--------------------------------------------------BASIC SELECT----------------------------------------------------

DROP TABLE TB_CLASS_PROFESSOR;

SELECT * FROM TB_CLASS;
SELECT * FROM TB_CLASS_PROFESSOR;
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_GRADE;
SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_STUDENT;

SELECT * FROM TB_DEPARTMENT;
-- 1. 춘 기술대학교의 학과 이름과 계열을 표시하시오. 단, 출력 헤더는 "학과 명", "계열"으로 표시하도록 한다.
SELECT DEPARTMENT_NAME AS "학과 명",
       CATEGORY        AS "계열"
FROM   TB_DEPARTMENT;

-- 2. 학과의 학과 정원을 다음과 같은 형태로 화면에 출력한다.
SELECT DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || '명 입니다.' AS "학과별 정원"
FROM   TB_DEPARTMENT;

-- 3. "국어국문학과"에 다니는 여학생 중 현재 휴학중인 여학생을 찾아달라는 요청이 들어왔다. 누구인가? (국문학과의 '학과코드'(001)는 학과 테이블(TB_DEPARTMENT)을 조회해서 찾아내도록 하자)
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 001 AND ABSENCE_YN = 'Y';

-- 4. 도서관에서 대출 도서 장기 연체자 들을 찾아 이름을 게시하고자 한다. 그 대상자들의 학번이 다음과 같을 때 대상자들을 찾는 적절한 SQL구문을 작성하시오.
SELECT * FROM TB_STUDENT;

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119')
ORDER BY STUDENT_NO DESC;

-- 5. 입학정원이 20명 이상 30명 이하인 학과들의 학과이름과 계열을 출력하시오.
SELECT * FROM TB_DEPARTMENT;

SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6. 춘 기술대학교는 총장을 제외하고 모든 교수들이 소속 학과를 가지고 있다. 그럼 춘 기술대학교 총장의 이름을 알아낼 수 있는 SQL 문장을 작성하시오.
SELECT * FROM TB_PROFESSOR;

SELECT PROFESSOR_NAME 
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 7. 혹시 전산상의 착오로 학과가 지정되어 있지 않은 학생이 있는지 확인하고자 한다.
-- 어떠한 SQL 문장을 사용하면 될 것인지 작성하시오.
SELECT * FROM TB_STUDENT;

SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8. 수강신청을 하려고 한다. 선수과목 여부를 확인해야 하는데, 선수과목이 존재하는 과목들은 어떤 과목인지 과목번호를 조회해보시오.
SELECT * FROM TB_CLASS;

SELECT CLASS_NO
FROM TB_CLASS
WHERE preattending_class_no IS NOT NULL;

-- 9. 춘 대학에는 어떤 계열(CATEGORY)들이 있는지 조회해보시오.
SELECT * FROM TB_DEPARTMENT;

SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT;

-- 10. 02학번 전주 거주자들의 모임을 만들려고 한다. 휴학한 사람들은 제외한 재학중인 학생들의 학번, 이름, 주민번호를 출력하는 구문을 작성하시오.
SELECT * FROM TB_STUDENT;

SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE STUDENT_ADDRESS LIKE '%전주%'
AND   ABSENCE_YN = 'N'
AND   SUBSTR(ENTRANCE_DATE, 1, 2) = 02;

-------------------------------------------------- 함수 ----------------------------------------------------
SELECT * FROM TB_CLASS;
SELECT * FROM TB_CLASS_PROFESSOR;
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_GRADE;
SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_STUDENT;

-- 1. 영어영문학과(학과코드 002) 학생들의 학번과 이름, 입학년도를 입학 년도가 빠른 순으로 표시하는 SQL문장을 작성하시오.
SELECT * FROM TB_STUDENT;

SELECT STUDENT_NO AS "학번", STUDENT_NAME AS "이름", TO_CHAR(TO_DATE(ENTRANCE_DATE), 'YYYY-MM-DD') AS "입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 002
ORDER BY 입학년도;

-- 2. 춘 기술대학교의 교수 중 이름이 세 글자가 아닌 교수가 한 명 있다고 한다. 그 교수의 이름과 주민번호를 화면에 출력하는 SQL문장을 작성해 보자.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME NOT LIKE '___';

-- 3. 춘 기술대학교의 남자 교수들의 이름과 나이를 출력하는 SQL 문장을 작성하시오. 단 이때 나이가 적은 사람에서 많은 사람 순서로 화면에 출력되도록 만드시오
SELECT * FROM TB_PROFESSOR;

SELECT PROFESSOR_NAME AS "교수이름",
       EXTRACT(YEAR FROM SYSDATE) -  TO_CHAR(TO_DATE(19 || (SUBSTR(PROFESSOR_SSN, 1,6))), 'YYYY') AS "나이"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8,1) = '1'
ORDER BY 나이;

SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL;

EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM 
















































